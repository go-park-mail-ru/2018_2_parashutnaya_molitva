basePath: /api/v1
definitions:
  controllers.ErrorResponse:
    properties:
      error:
        example: Already signed in
        type: string
    type: object
  controllers.SignInParameters:
    properties:
      email:
        example: test@mail.ru
        type: string
      password:
        example: 1234qwerty
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: Ksenobait_09@mail.ru
    name: API Support
  description: This is a api for game called kekmate.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Kekmate API
  version: "1.0"
paths:
  /session:
    post:
      consumes:
      - application/json
      operationId: post-session
      parameters:
      - description: User auth data
        in: body
        name: AuthData
        required: true
        schema:
          $ref: '#/definitions/controllers.SignInParameters'
          type: object
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
            type: object
      summary: Sign in with your account with email and password, set session cookie
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
