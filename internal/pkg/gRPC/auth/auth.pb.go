// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SessionCookie struct {
	Cookie               string   `protobuf:"bytes,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionCookie) Reset()         { *m = SessionCookie{} }
func (m *SessionCookie) String() string { return proto.CompactTextString(m) }
func (*SessionCookie) ProtoMessage()    {}
func (*SessionCookie) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *SessionCookie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionCookie.Unmarshal(m, b)
}
func (m *SessionCookie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionCookie.Marshal(b, m, deterministic)
}
func (m *SessionCookie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionCookie.Merge(m, src)
}
func (m *SessionCookie) XXX_Size() int {
	return xxx_messageInfo_SessionCookie.Size(m)
}
func (m *SessionCookie) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionCookie.DiscardUnknown(m)
}

var xxx_messageInfo_SessionCookie proto.InternalMessageInfo

func (m *SessionCookie) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type UserGuid struct {
	Guid                 string   `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserGuid) Reset()         { *m = UserGuid{} }
func (m *UserGuid) String() string { return proto.CompactTextString(m) }
func (*UserGuid) ProtoMessage()    {}
func (*UserGuid) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *UserGuid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserGuid.Unmarshal(m, b)
}
func (m *UserGuid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserGuid.Marshal(b, m, deterministic)
}
func (m *UserGuid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserGuid.Merge(m, src)
}
func (m *UserGuid) XXX_Size() int {
	return xxx_messageInfo_UserGuid.Size(m)
}
func (m *UserGuid) XXX_DiscardUnknown() {
	xxx_messageInfo_UserGuid.DiscardUnknown(m)
}

var xxx_messageInfo_UserGuid proto.InternalMessageInfo

func (m *UserGuid) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

type UserAuthed struct {
	IsAuth               bool     `protobuf:"varint,1,opt,name=isAuth,proto3" json:"isAuth,omitempty"`
	Guid                 string   `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAuthed) Reset()         { *m = UserAuthed{} }
func (m *UserAuthed) String() string { return proto.CompactTextString(m) }
func (*UserAuthed) ProtoMessage()    {}
func (*UserAuthed) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *UserAuthed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthed.Unmarshal(m, b)
}
func (m *UserAuthed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthed.Marshal(b, m, deterministic)
}
func (m *UserAuthed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthed.Merge(m, src)
}
func (m *UserAuthed) XXX_Size() int {
	return xxx_messageInfo_UserAuthed.Size(m)
}
func (m *UserAuthed) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthed.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthed proto.InternalMessageInfo

func (m *UserAuthed) GetIsAuth() bool {
	if m != nil {
		return m.IsAuth
	}
	return false
}

func (m *UserAuthed) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

type SessionToken struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	TimeExpire           string   `protobuf:"bytes,2,opt,name=timeExpire,proto3" json:"timeExpire,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionToken) Reset()         { *m = SessionToken{} }
func (m *SessionToken) String() string { return proto.CompactTextString(m) }
func (*SessionToken) ProtoMessage()    {}
func (*SessionToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{3}
}

func (m *SessionToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionToken.Unmarshal(m, b)
}
func (m *SessionToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionToken.Marshal(b, m, deterministic)
}
func (m *SessionToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionToken.Merge(m, src)
}
func (m *SessionToken) XXX_Size() int {
	return xxx_messageInfo_SessionToken.Size(m)
}
func (m *SessionToken) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionToken.DiscardUnknown(m)
}

var xxx_messageInfo_SessionToken proto.InternalMessageInfo

func (m *SessionToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SessionToken) GetTimeExpire() string {
	if m != nil {
		return m.TimeExpire
	}
	return ""
}

type Nothing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{4}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SessionCookie)(nil), "auth.SessionCookie")
	proto.RegisterType((*UserGuid)(nil), "auth.UserGuid")
	proto.RegisterType((*UserAuthed)(nil), "auth.UserAuthed")
	proto.RegisterType((*SessionToken)(nil), "auth.SessionToken")
	proto.RegisterType((*Nothing)(nil), "auth.Nothing")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x13, 0x89, 0xb5, 0x7d, 0x34, 0x22, 0xa3, 0x88, 0xf4, 0x50, 0x64, 0x2f, 0x7a, 0xea,
	0xa1, 0x22, 0x7a, 0x95, 0x56, 0xbc, 0x79, 0x68, 0xf5, 0x07, 0x68, 0x33, 0x34, 0x4b, 0x34, 0x5b,
	0x92, 0x59, 0xf0, 0x37, 0xf9, 0x2b, 0x65, 0x37, 0xa3, 0x6d, 0x2f, 0xde, 0xde, 0xcc, 0xce, 0xf7,
	0x76, 0xdf, 0x2c, 0xf0, 0xe6, 0xa5, 0x9c, 0x6c, 0x1a, 0x27, 0x8e, 0xb2, 0xa0, 0xcd, 0x15, 0xf2,
	0x25, 0xb7, 0xad, 0x75, 0xf5, 0xcc, 0xb9, 0xca, 0x32, 0x9d, 0xa3, 0xb7, 0x8a, 0xea, 0x22, 0xbd,
	0x4c, 0xaf, 0x07, 0x0b, 0xad, 0xcc, 0x18, 0xfd, 0xd7, 0x96, 0x9b, 0x27, 0x6f, 0x0b, 0x22, 0x64,
	0x6b, 0x6f, 0x0b, 0x9d, 0x88, 0xda, 0xdc, 0x03, 0xe1, 0xfc, 0xc1, 0x4b, 0xc9, 0x45, 0x70, 0xb1,
	0x6d, 0xd0, 0x71, 0xa6, 0xbf, 0xd0, 0xea, 0x8f, 0x3c, 0xd8, 0x21, 0xe7, 0x18, 0xea, 0x13, 0x5e,
	0x5c, 0xc5, 0x35, 0x9d, 0xe1, 0x50, 0x82, 0x50, 0xfb, 0xae, 0xa0, 0x31, 0x20, 0xf6, 0x93, 0x1f,
	0xbf, 0x36, 0xb6, 0x61, 0xe5, 0x77, 0x3a, 0x66, 0x80, 0xa3, 0x67, 0x27, 0xa5, 0xad, 0xd7, 0xd3,
	0xef, 0x14, 0x59, 0xbc, 0xed, 0x16, 0xf9, 0x9c, 0x3f, 0x58, 0x58, 0xfd, 0xe9, 0x74, 0x12, 0x17,
	0xb0, 0x97, 0x78, 0x94, 0x77, 0x4d, 0xa5, 0x4d, 0x42, 0x77, 0x18, 0xce, 0x4a, 0x5e, 0x55, 0xff,
	0x52, 0x27, 0x5d, 0x73, 0x9b, 0xd9, 0x24, 0x34, 0x05, 0x96, 0x2c, 0xbf, 0xd8, 0xf1, 0x76, 0x22,
	0x6c, 0x6d, 0x44, 0x7b, 0x36, 0x31, 0xab, 0x49, 0xde, 0x7b, 0xf1, 0x37, 0x6e, 0x7e, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x95, 0xeb, 0xa7, 0x0f, 0x9b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	DeleteSession(ctx context.Context, in *SessionCookie, opts ...grpc.CallOption) (*Nothing, error)
	CheckSession(ctx context.Context, in *SessionCookie, opts ...grpc.CallOption) (*UserAuthed, error)
	SetSession(ctx context.Context, in *UserGuid, opts ...grpc.CallOption) (*SessionToken, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) DeleteSession(ctx context.Context, in *SessionCookie, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/auth.Auth/DeleteSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) CheckSession(ctx context.Context, in *SessionCookie, opts ...grpc.CallOption) (*UserAuthed, error) {
	out := new(UserAuthed)
	err := c.cc.Invoke(ctx, "/auth.Auth/CheckSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) SetSession(ctx context.Context, in *UserGuid, opts ...grpc.CallOption) (*SessionToken, error) {
	out := new(SessionToken)
	err := c.cc.Invoke(ctx, "/auth.Auth/SetSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	DeleteSession(context.Context, *SessionCookie) (*Nothing, error)
	CheckSession(context.Context, *SessionCookie) (*UserAuthed, error)
	SetSession(context.Context, *UserGuid) (*SessionToken, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_DeleteSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionCookie)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DeleteSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/DeleteSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DeleteSession(ctx, req.(*SessionCookie))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_CheckSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionCookie)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).CheckSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/CheckSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).CheckSession(ctx, req.(*SessionCookie))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_SetSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserGuid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).SetSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/SetSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).SetSession(ctx, req.(*UserGuid))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteSession",
			Handler:    _Auth_DeleteSession_Handler,
		},
		{
			MethodName: "CheckSession",
			Handler:    _Auth_CheckSession_Handler,
		},
		{
			MethodName: "SetSession",
			Handler:    _Auth_SetSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
