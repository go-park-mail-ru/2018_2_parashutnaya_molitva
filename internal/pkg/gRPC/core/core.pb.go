// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core.proto

package core

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Session struct {
	Cookie               string   `protobuf:"bytes,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{0}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type User struct {
	IsAuth               bool     `protobuf:"varint,1,opt,name=isAuth,proto3" json:"isAuth,omitempty"`
	Guid                 string   `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	Login                string   `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Score                int32    `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetIsAuth() bool {
	if m != nil {
		return m.IsAuth
	}
	return false
}

func (m *User) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *User) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type ScoreAdd struct {
	Guid                 string   `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Score                int32    `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScoreAdd) Reset()         { *m = ScoreAdd{} }
func (m *ScoreAdd) String() string { return proto.CompactTextString(m) }
func (*ScoreAdd) ProtoMessage()    {}
func (*ScoreAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{2}
}

func (m *ScoreAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScoreAdd.Unmarshal(m, b)
}
func (m *ScoreAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScoreAdd.Marshal(b, m, deterministic)
}
func (m *ScoreAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScoreAdd.Merge(m, src)
}
func (m *ScoreAdd) XXX_Size() int {
	return xxx_messageInfo_ScoreAdd.Size(m)
}
func (m *ScoreAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_ScoreAdd.DiscardUnknown(m)
}

var xxx_messageInfo_ScoreAdd proto.InternalMessageInfo

func (m *ScoreAdd) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *ScoreAdd) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type Nothing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{3}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Session)(nil), "core.Session")
	proto.RegisterType((*User)(nil), "core.User")
	proto.RegisterType((*ScoreAdd)(nil), "core.ScoreAdd")
	proto.RegisterType((*Nothing)(nil), "core.Nothing")
}

func init() { proto.RegisterFile("core.proto", fileDescriptor_f7e43720d1edc0fe) }

var fileDescriptor_f7e43720d1edc0fe = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x4d, 0x4e, 0x03, 0x31,
	0x0c, 0x85, 0x9b, 0x92, 0xe9, 0x8f, 0x25, 0x2a, 0x14, 0x21, 0x14, 0x75, 0x55, 0xb2, 0xea, 0xaa,
	0x88, 0x9f, 0x0b, 0x0c, 0x2c, 0xd8, 0xb1, 0x98, 0xc2, 0x01, 0xa0, 0x89, 0x66, 0x02, 0xc3, 0x18,
	0x25, 0x99, 0x05, 0xb7, 0x47, 0x76, 0x02, 0xa2, 0x3b, 0x7f, 0xcf, 0x7e, 0x7a, 0xb6, 0x01, 0x0e,
	0x18, 0xdc, 0xee, 0x2b, 0x60, 0x42, 0x25, 0xa9, 0x36, 0x97, 0x30, 0xdf, 0xbb, 0x18, 0x3d, 0x0e,
	0xea, 0x02, 0x66, 0x07, 0xc4, 0x0f, 0xef, 0xb4, 0xd8, 0x88, 0xed, 0xb2, 0x29, 0x64, 0x12, 0xc8,
	0x97, 0xe8, 0x02, 0xf5, 0x7d, 0xac, 0xc7, 0xd4, 0x71, 0x7f, 0xd1, 0x14, 0x52, 0x0a, 0x64, 0x3b,
	0x7a, 0xab, 0xa7, 0xec, 0xe2, 0x5a, 0x9d, 0x43, 0xd5, 0x63, 0xeb, 0x07, 0x7d, 0xc2, 0x62, 0x06,
	0x52, 0xdd, 0xe7, 0xab, 0xef, 0xb5, 0xcc, 0x2a, 0x03, 0xa9, 0x91, 0x76, 0xd1, 0xd5, 0x46, 0x6c,
	0xab, 0x26, 0x83, 0xb9, 0x83, 0xc5, 0x9e, 0x8a, 0xda, 0xda, 0xbf, 0x04, 0x71, 0x9c, 0x90, 0x5d,
	0xd3, 0xff, 0xae, 0x25, 0xcc, 0x9f, 0x30, 0x75, 0x7e, 0x68, 0x6f, 0xde, 0x41, 0x3e, 0x60, 0x70,
	0xea, 0x0a, 0xce, 0x1e, 0x5d, 0xa2, 0x0b, 0xee, 0xbf, 0x7f, 0x4f, 0x3d, 0xdd, 0xf1, 0x23, 0x0a,
	0xae, 0x21, 0x23, 0xcd, 0x98, 0x89, 0xba, 0x86, 0x55, 0x6d, 0x2d, 0x87, 0x3f, 0x23, 0x5f, 0xbe,
	0x2a, 0xe3, 0x65, 0x9f, 0x75, 0xb1, 0x97, 0x24, 0x33, 0x79, 0x9b, 0xf1, 0x4b, 0x6f, 0x7f, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xb2, 0x2c, 0x6f, 0x27, 0x60, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreClient is the client API for Core service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreClient interface {
	GetUserBySession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*User, error)
	AddScoreToUser(ctx context.Context, in *ScoreAdd, opts ...grpc.CallOption) (*Nothing, error)
}

type coreClient struct {
	cc *grpc.ClientConn
}

func NewCoreClient(cc *grpc.ClientConn) CoreClient {
	return &coreClient{cc}
}

func (c *coreClient) GetUserBySession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/core.Core/GetUserBySession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreClient) AddScoreToUser(ctx context.Context, in *ScoreAdd, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/core.Core/AddScoreToUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServer is the server API for Core service.
type CoreServer interface {
	GetUserBySession(context.Context, *Session) (*User, error)
	AddScoreToUser(context.Context, *ScoreAdd) (*Nothing, error)
}

func RegisterCoreServer(s *grpc.Server, srv CoreServer) {
	s.RegisterService(&_Core_serviceDesc, srv)
}

func _Core_GetUserBySession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).GetUserBySession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.Core/GetUserBySession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).GetUserBySession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _Core_AddScoreToUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScoreAdd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).AddScoreToUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.Core/AddScoreToUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).AddScoreToUser(ctx, req.(*ScoreAdd))
	}
	return interceptor(ctx, in, info, handler)
}

var _Core_serviceDesc = grpc.ServiceDesc{
	ServiceName: "core.Core",
	HandlerType: (*CoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserBySession",
			Handler:    _Core_GetUserBySession_Handler,
		},
		{
			MethodName: "AddScoreToUser",
			Handler:    _Core_AddScoreToUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "core.proto",
}
